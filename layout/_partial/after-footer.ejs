<script>
	var yiliaConfig = {
		mathjax: <%=theme.mathjax%>,
		isHome: <%=is_home()%>,
		isPost: <%=is_post()%>,
		isArchive: <%=is_archive()%>,
		isTag: <%=is_tag()%>,
		isCategory: <%=is_category()%>,
		open_in_new: <%=theme.open_in_new%>,
		toc_hide_index: <%=theme.toc_hide_index%>,
		root: "<%=config.root%>",
		innerArchive: <%=theme.smart_menu.innerArchive ? true : false%>,
		showTags: <%=(theme.slider && theme.slider.showTags) ? true : false%>
	}
</script>

<%- partial('script') %>

<% if (theme.mathjax){ %>
<%- partial('mathjax') %>
<% } %>

<!DOCTYPE html>
<html>


        <!-- 【custom.html】 -->
        <script src="https://cdn.jsdelivr.net/npm/pjax/pjax.min.js"></script>
        <script>
            var pjax = new Pjax({
            selectors: [
                ".container",".body-wrap",
            ]
            })
        </script>
        <script>
            pjax._handleResponse = pjax.handleResponse;
            pjax.handleResponse = function(responseText, request, href, options) {
                if (request.responseText.match("<html")) {
                    if (responseText) {
                        // 将新页面的html字符串解析成DOM对象
                        let newDom = new DOMParser().parseFromString(responseText, 'text/html');
                        // 获取新页面中body的className，并设置回当前页面
                        let bodyClass = newDom.body.className;
                        document.body.setAttribute("class", bodyClass)
                    }
                    // 放行，交给pjax自己处理
                    pjax._handleResponse(responseText, request, href, options);
                } else {
                    // handle non-HTML response here
                }
            }
        </script>


        

</html>
